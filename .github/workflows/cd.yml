name: CD

on:
  push:
    branches:
      - github-release

jobs:
  create-staging-repository:
    name: Create staging repository
    runs-on: ubuntu-latest
    outputs:
      repository_id: ${{ steps.create-staging-repository.outputs.repository_id }}
    steps:
      - id: create
        uses: nexus-actions/create-nexus-staging-repo@v1.1
        with:
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_profile_id: ${{ secrets.SONATYPE_PROFILE_ID }}
  build-upload:
    needs: [create-staging-repository]
    if: success()
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure JDK
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - run: echo "needs $REPOSITORY_ID"
        env:
          REPOSITORY_ID: ${{ needs.create_staging_repository.outputs.repository_id }}
      - run: echo "steps ${{ steps.create_staging_repository.outputs.repository_id }}"
        env:
          REPOSITORY_ID: ${{ steps.create_staging_repository.outputs.repository_id }}

      - name: Publish
        run: ./gradlew publishToSonatype -no-daemon --no-parallel --stacktrace -DSONATYPE_USERNAME=$SONATYPE_USERNAME -DSONATYPE_PASSWORD=$SONATYPE_PASSWORD -DREPOSITORY_ID=$REPOSITORY_ID -DGPG_PRIVATE_PASSWORD=$GPG_PRIVATE_PASSWORD -DGPG_PRIVATE_KEY=$GPG_PRIVATE_KEY
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PRIVATE_PASSWORD: ${{ secrets.GPG_PRIVATE_PASSWORD }}
          REPOSITORY_ID: ${{ needs.create_staging_repository.outputs.repository_id }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
  drop-or-release:
    needs: [create-staging-repository, build-upload]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Discard
        if: needs.build-upload.result != 'success'
        uses: nexus-actions/drop-nexus-staging-repo@v1
        with:
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_repository_id: ${{ needs.create_staging_repository.outputs.repository_id }}
      - name: Release
        if: needs.build-upload.result == 'success'
        uses: nexus-actions/release-nexus-staging-repo@v1
        with:
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_repository_id: ${{ needs.create_staging_repository.outputs.repository_id }}
